name: CI Workflow
on:
  push:
    branches:
      - master
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        context:
          - reactor
          - supplier
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up reviewdog
        uses: reviewdog/action-setup@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build
        uses: docker/build-push-action@v6
        id: build
        with:
          context: ${{ matrix.context }}
          target: dev
          cache-from: type=gha,scope=${{ github.ref_name }}-${{ matrix.context }}test
          cache-to: type=gha,scope=${{ github.ref_name }}-${{ matrix.context }}test,mode=max
          load: true
      - name: Run tests
        run: |
          docker run --rm ${{ steps.build.outputs.imageid }} go test ./...
      - name: Run golangci-lint
        if: ${{ always() && steps.build.conclusion == 'success' }}
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker run --rm ${{ steps.build.outputs.imageid }} golangci-lint run --out-format=line-number --path-prefix=${{ matrix.context }} |
            reviewdog -f=golangci-lint -reporter=github-pr-annotations -filter-mode=nofilter -fail-level=any -tee

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into Container Registry
        if: ${{ github.ref_name == 'master' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/bake-action@v6
        with:
          files: docker-bake.hcl
          push: ${{ github.ref_name == 'master' }}
          set: |
            supplier.tags=ghcr.io/chitoku-k/ejaculation-counter/supplier:latest
            reactor.tags=ghcr.io/chitoku-k/ejaculation-counter/reactor:latest
            grafana.tags=ghcr.io/chitoku-k/ejaculation-counter/grafana:latest
            mq.tags=ghcr.io/chitoku-k/ejaculation-counter/mq:latest
            web.tags=ghcr.io/chitoku-k/ejaculation-counter/web:latest
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
