version: '3.8'

services:
  supplier:
    build:
      context: ./supplier
      target: build
    command: ./supplier
    environment:
      TZ: Asia/Tokyo
      MASTODON_ACCESS_TOKEN:
      MASTODON_SERVER_URL:
      MASTODON_STREAM: direct
      MQ_HOST: amqp://mq
      MQ_USERNAME: shiko
      MQ_PASSWORD: shiko
      PORT: 80
      LOG_LEVEL: debug
    deploy:
      mode: replicated
      replicas: 2
    volumes:
      - type: bind
        source: ./supplier
        target: /usr/src/app

  reactor:
    build:
      context: ./reactor
      target: build
    command: ./reactor
    environment:
      USER_ID: 1
      TZ: Asia/Tokyo
      DB_HOST: database
      DB_DATABASE: ejaculation
      DB_USERNAME: shiko
      DB_PASSWORD: shiko
      DB_SSL_MODE: disable
      MASTODON_USER_ID:
      MASTODON_ACCESS_TOKEN:
      MASTODON_SERVER_URL:
      MQ_HOST: amqp://mq
      MQ_USERNAME: shiko
      MQ_PASSWORD: shiko
      EXT_MPYW_API_URL:
      PORT: 80
      LOG_LEVEL: debug
    deploy:
      mode: replicated
      replicas: 2
    volumes:
      - type: bind
        source: ./reactor
        target: /usr/src/app

  web:
    image: nginx:1.21
    ports:
      - "${COUNTER_PORT-8080}:80"
    environment:
      REACTOR_HOST: reactor
      GF_HOST: grafana
    volumes:
      - type: bind
        source: ./public
        target: /var/www/html
      - type: bind
        source: ./conf
        target: /etc/nginx/templates

  grafana:
    build:
      context: ./grafana
    environment:
      TZ:
      GF_AUTH_ANONYMOUS_ENABLED: 1
      GF_SECURITY_ALLOW_EMBEDDING: 1
      GF_SERVER_ENABLE_GZIP: 1
      GF_SERVER_SERVE_FROM_SUB_PATH: 1
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/grafana"
      GF_SERVER_DOMAIN: grafana
      POSTGRES_URL: database
      POSTGRES_DB: ejaculation
      POSTGRES_USER: shiko
      POSTGRES_PASSWORD: shiko
      POSTGRES_SSLMODE: disable
    volumes:
      - type: bind
        source: ./grafana/dashboards
        target: /etc/grafana/provisioning/dashboards
      - type: bind
        source: ./grafana/datasources
        target: /etc/grafana/provisioning/datasources

  mq:
    build:
      context: ./mq
    environment:
      RABBITMQ_DEFAULT_USER: shiko
      RABBITMQ_DEFAULT_PASS: shiko
    volumes:
      - type: volume
        source: mq
        target: /var/lib/rabbitmq

  database:
    image: postgres:14.0
    volumes:
      - type: bind
        source: ./database
        target: /docker-entrypoint-initdb.d
      - type: volume
        source: database
        target: /var/lib/postgres/data
    environment:
      TZ:
      POSTGRES_DB: ejaculation
      POSTGRES_USER: shiko
      POSTGRES_PASSWORD: shiko

volumes:
  mq:
    driver: local
  database:
    driver: local
